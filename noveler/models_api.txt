
const datetime_format: str
const date_format: str

class Activity
    const id: int
    const user_id: int
    const summary: str
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize ( data: dict ) : Activity

class Assistance
    const id: int
    const user_id: int
    const session_uuid: str
    const assistant: str
    const model: str
    const priming: str
    const prompt: str
    const temperature: float 0.5 by default
    const seed: int
    const content: str
    const done: bool
    const total_duration: int
    const load_duration: int
    const prompt_eval_count: int
    const prompt_eval_duration: int
    const eval_count: int
    const eval_duration: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize ( data: dict ) : Assistance

class Author
    const id: int
    const user_id: int
    const is_pseudonym: bool
    const name: str
    const initials: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const stories: List[AuthorStory]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Author

class AuthorStory
    const author_id: int
    const story_id: int
    const user_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const author: Author
    const story: Story
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : AuthorStory

class Assistance
    const id: int
    const user_id: int
    const session_uuid: str
    const assistant: str
    const model: str
    const priming: str
    const prompt: str
    const temperature: float 0.5 by default
    seed: int,
    content: str,
    done: bool,
    total_duration: int,
    load_duration: int,
    prompt_eval_count: int,
    prompt_eval_duration: int,
    eval_count: v,
    eval_duration: int,
    const created: str for input/output, datetime.datetime object otherwise
    const user: User

class Bibliography
    const id: int
    const user_id: int
    const story_id: int
    const title: str
    const pages: str
    const publisher: str
    const publication_date: str for input/output, datetime.date object otherwise
    const editor: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const story: Story
    const authors: List[BibliographyStory]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Bibliography

class BibliographyAuthor
    const id: int
    const user_id: int
    const bibliography_id: int
    const name: str
    const initials: str
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const reference: Bibliography
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : BibliographyAuthor

class Chapter
    const id: int
    const user_id; int
    const story_id: int
    const position: int
    const title: str
    const description: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const scenes: List[ChapterScene]
    const user: User
    const story: Story
    const links: List[ChapterLink]
    const notes: List[ChapterNote]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Chapter

class ChapterLink
    const user_id: int
    const story_id: int
    const chapter_id: int
    const link_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const story: Story
    const chapter: Chapter
    const link: Link
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : ChapterLink

class ChapterNote
    const user_id: int
    const story_id: int
    const chapter_id: int
    const note_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const story: Story
    const chapter: Chapter
    const note: Note
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : ChapterNote

class Character
    const id: int
    const user_id: int
    const title: str
    const first_name: str
    const middle_name: str
    const last_name: str
    const nickname: str
    const gender: str
    const sex: str
    const date_of_birth: str for input/output, datetime.date object otherwise
    const date_of_death: str for input/output, datetime.date object otherwise
    const description: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const character_relationships: List[CharacterRelationship]
    const traits: List[CharacterTrait]
    const events: List[CharacterEvent]
    const images: List[CharacterImage]
    const links: List[CharacterLink]
    const notes: List[CharacterNote]
    const stories: List[CharacterStory]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Character

class CharacterEvent
    const user_id: int
    const character_id: int
    const event_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const character: Character
    const event: Event
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : CharacterEvent

class CharacterImage
    const user_id: int
    const character_id: int
    const image_id: int
    const position: int
    const is_default: bool
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: USer
    const character: Character
    const image: Image
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : CharacterImage

class CharacterLink
    const user_id: int
    const character_id: int
    const link_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: USer
    const character: Character
    const link: Link
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : CharacterLink

class CharacterNote
    const user_id: int
    const character_id: int
    const note_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const character: Character
    const note: Note
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : CharacterNote

class CharacterRelationshipTypes
    const FAMILY: str "Family"
    const PERSONAL: str "Personal"
    const ROMANTIC: str "Romantic"
    const PROFESSIONAL: str "Professional"
    const OTHER: str "Other"

class CharacterRelationship
    const id: id
    const user_id: int
    const parent_id: int
    const position: int
    const related_id: int
    const relationship_type: str
    const description: str
    const start_date: str for input/output, datetime.date object otherwise
    const end_date: str for input/output, datetime.date object otherwise
    const created; str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const parent_character: Character
    const related_character: Character
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : str
    func unserialize( data: dict ) : CharacterRelationship

class CharacterStory
    const user_id: int
    const character_id: int
    const story_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const character: Character
    const story: Story
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : CharacterStory

class CharacterTrait
    const id: int
    const user_id: int
    const character_id: int
    const position: int
    const name: str
    const magnitude: int
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const character: Character
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : CharacterTrait

class Event
    const id: int
    const user_id: int
    const title: str
    const description: str
    const start_datetime: str for input/output, datetime.datetime object otherwise
    const end_datetime: str for input/output, datetime.datetime object otherwise
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const links: List[EventLink]
    const characters: List[CharacterEvent]
    const notes" List[EventNote]
    const locations: List[EventLocation]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Event

class EventLink
    const user_id: int
    const event_id: int
    const link_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const event: Event
    const link: Link
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : EventLink

class EventLocation
    const user_id: int
    const event_id: int
    const location_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const event: Event
    const location: Location
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict 0 : EventLocation

class EventNote
    const user_id: int
    const event_id: int
    const note_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const event: Event
    const note: Note
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : str
    func unserialize( data: dict ) : EventNote

class ImageMimeTypes
    const JPEG: str "image/jpeg"
    const PNG: str "image/png"
    const GIF: str "image/gif"

class Image
    const id: int
    const user_id: int
    const filename: str
    const dirname: str
    const size_in_bytes: int
    const mime_type: str
    const caption: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const character: Character
    const location: Location
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Image

class ImageLocation
    const user_id: int
    const image_id: int
    const location_id: int
    const position: int
    const is_default: bool
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const image: Image
    const location: Location
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : ImageLocation

class Link
    const id: int
    const user_id: int
    const title: str
    const url: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const stories: List[LinkStory]
    const chapters: List[ChapterLink]
    const scenes: List[LinkScene]
    const characters: List[CharacterLink]
    const events: List[EventLink]
    const locations: List[LinkLocation]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( ) : data: dict ) : Link

class LinkLocation
    const user_id: int
    const link_id: int
    const location_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const link: Link
    const location: Location
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : LinkLocation

class LinkScene
    const user_id: int
    const link_id: int
    const scene_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const link: Link
    const scene: Scene
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : LinkScene

class LinkStory
    const user_id: int
    const link_id: int
    const story_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const link: Link
    const story: Story
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : LinkStory

class Location
    const id: id
    const user_id: id
    const title: str
    const description: str
    const address: str
    const city: str
    const state: str
    const country: str
    const zip_code: str
    const latitude: float
    const longitude: float
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const images: List[ImageLocation]
    const links: List[LinkLocation]
    const events: List[EventLocation]
    const notes: List[LocationNote]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Location

class LocationNote
    const user_id: int
    const location_id: int
    const note_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const location: Location
    const note: Note
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : LocationNote

class Note
    const id: int
    const user_id: int
    const title: str
    const content: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const stories: List[NoteStory]
    const chapters: List[ChapterNote]
    const scenes: List[NoteScene]
    const characters: List[CharacterNote]
    const events: List[EventNote]
    const locations: List[LocationNote]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Note

class NoteScene
    const user_id: int
    const note_id: int
    const scene_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const note: Note
    const scene: Scene
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : NoteScene

class NoteStory
    const user_id: int
    const note_id: int
    const story_id: int
    const created: str for input/output, datetime.datetime object otherwise
    const user: User
    const note: Note
    const story: Story
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ): NoteStory

class OllamaModel
    const id: int
    const title: str
    const model: str
    const description: str
    const template: str
    const example: str
    const priming: str
    const params: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : OllamaModel

class Scene
    const id: int
    const user_id: int
    const story_id: int
    const chapter_id: int
    const position: int
    const title: str
    const description: str
    const content: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const chapter: Chapter
    const user: User
    const links: List[LinkScene]
    const notes: List[NoteScene]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Scene

class Story
    const id: int
    const user_id: int
    const title: str
    const description: str
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const chapters: List[Chapter]
    const authors: List[AuthorStory]
    const references: List[Bibliography]
    const submissions: List[Submission]
    const links: List[LinkStory]
    const notes: List[NoteStory]
    const characters: List[CharacterStory]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Story

class SubmissionResultType
    const ACCEPTED: str "Accepted"
    const REJECTED: str "Rejected"
    const REWRITE_REQUESTED: str "Rewrite Requested"
    const PENDING: str "Pending"
    const WITHDRAWN: str "Withdrawn"
    const IGNORED: str "Ignored"

class Submission
    const id: int
    const user_id: int
    const story_id: int
    const submitted_to: str
    const date_sent: str for input/output, datetime.date object otherwise
    const date_reply_received: str for input/output, datetime.date object otherwise
    const date_published: str for input/output, datetime.date object otherwise
    const date_paid: str for input/output, datetime.date object otherwise
    const result: str
    const amount: float
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const user: User
    const story: Story
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : Submission

class User
    const id: int
    const uuid: str
    const username: str
    const email: str
    const password: str
    const is_active: bool
    const is_banned: bool
    const created: str for input/output, datetime.datetime object otherwise
    const modified: str for input/output, datetime.datetime object otherwise
    const activities: List[Activity]
    const authors: List[Author]
    const characters: List[Character]
    const events: List[Event]
    const images: List[Image]
    const links: List[Link]
    const locations: List[Location]
    const notes: List[Note]
    const stories: List[Story]
    const submissions: List[Submission]
    func __repr__( ) : str
    func __str__( ) : str
    func serialize( ) : dict
    func unserialize( data: dict ) : User

