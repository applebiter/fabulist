
func hash_password ( password: str ) : str
func verify_password ( password: str, hashed_password: str ) : bool

class ActivityController
   get_activity_by_id ( activity_id: int ) : Type[Activity] | None
   get_activities ( ) : list
   get_activities_page ( page: int, per_page: int ) : list
   get_activity_count ( ) : int
   search_activities ( search: str ) : list

class AuthorController
   create_author ( name: str, initials: str = None, is_pseudonym: bool = False ) : Author
   update_author ( author_id: int, name: str, initials: str = None ) : Type[Author]
   change_pseudonym_status ( author_id: int, is_pseudonym: bool ) : Type[Author]
   delete_author ( author_id: int ) : bool
   get_author_by_id ( author_id: int ) : Type[Author] | None
   get_author_by_name ( name: str ) : Type[Author] | None
   get_author_count ( ) : int
   get_all_authors ( ) list
   get_authors_page ( page: int, per_page: int ) : list
   get_authors_by_story_id ( story_id: int ) : list
   search_authors ( search: str ) : list

class BibliographyController
   create_bibliography ( story_id: int, title: str, pages: str = None, publication_date: str = None, other_text: str = None ) : Bibliography
   update_bibliography ( bibliography_id: int, story_id: int, title: str, pages: str = None, publication_date: str = None, other_text: str = None ) : Type[Bibliography]    
   delete_bibliography ( bibliography_id: int ) : bool
   get_bibliography_by_id ( bibliography_id: int ) : Type[Bibliography] | None
   get_bibliography_by_title ( title: str ) : Type[Bibliography] | None
   get_bibliography_count ( ) : int
   get_all_bibliographies ( ) : list
   get_bibliographies_page ( page: int, per_page: int ) : list
   get_bibliographies_by_story_id ( story_id: int ) list
   get_bibliographies_page_by_story_id ( story_id: int, page: int, per_page: int ) : list
   search_bibliographies ( search: str ) : list
   search_bibliographies_by_story_id ( story_id: int, search: str ) : list

class ChapterController
   create_chapter ( story_id: int, title: str, description: str = None ) : Chapter
   update_chapter ( chapter_id: int, title: str, description: str = None ) : Type[Chapter]
   delete_chapter ( chapter_id: int ) : bool
   change_chapter_position ( chapter_id: int, position: int ) : Type[Character]
   get_chapter_by_id ( chapter_id: int ) : Type[Chapter] | None
   get_all_chapters ( ) : list
   get_all_chapters_page ( page: int, per_page: int ) : list
   get_chapter_count ( ) : int
   get_chapters_by_story_id ( story_id: int ) : list
   get_chapters_page_by_story_id ( story_id: int, page: int, per_page: int ) : list
   get_chapter_count_by_story_id ( story_id: int ) : int
   search_chapters ( search: str ) : list
   search_chapters_by_story_id ( story_id: int, search: str ) : list
   append_links_to_chapter ( chapter_id: int, link_ids: list ) : Type[Chapter]
   get_links_by_chapter_id ( chapter_id: int ) : list
   append_notes_to_chapter ( chapter_id: int, note_ids: list ) : Type[Chapter]
   get_notes_by_chapter_id ( chapter_id: int ) : list

class CharacterController
   create_character ( title: str = None, first_name: str = None, middle_name: str = None, last_name: str = None, nickname: str = None, gender: str = None, sex: str = None, date_of_birth: str = None, date_of_death: str = None, description: None ) : Character    
   update_character ( character_id: int, title: str = None, first_name: str = None, middle_name: str = None, last_name: str = None, nickname: str = None, gender: str = None, sex: str = None, date_of_birth: str = None, date_of_death: str = None, description: None ) : Character  
   delete_character ( character_id: int ) : bool
   get_character_by_id ( character_id: int ) : Type[Character] | None
   get_character_count ( ) : int
   get_all_characters ( ) : list
   get_all_characters_page ( page: int, per_page: int ) : list
   get_character_count_by_story_id ( story_id: int ) : int
   get_characters_by_story_id ( story_id: int ) : list
   get_characters_page_by_story_id ( story_id: int, page: int, per_page: int ) : list
   search_characters ( search: str ) : list
   search_characters_by_story_id ( story_id: int, search: str ) : list
   create_relationship ( parent_id: int, related_id: int, relationship_type: str, description: str = None, start_date: str = None, end_date: str = None ) : CharacterRelationship    
   update_relationship ( relationship_id: int, parent_id: int, related_id: int, relationship_type: str, description: str = None, start_date: str = None, end_date: str = None ) : Type[CharacterRelationship]    
   change_relationship_position ( relationship_id: int, position: int ) : CharacterRelationship    
   delete_relationship ( relationship_id: int ) : bool
   get_relationship_by_id ( relationship_id: int ) : Type[CharacterRelationship] | None
   get_relationships_by_character_id ( character_id: int ) : list
   get_relationships_page_by_character_id ( character_id: int, page: int, per_page: int ) : list
   create_trait ( character_id: int, name: str, magnitude: int ) : CharacterTrait
   update_trait ( trait_id: int, name: str, magnitude: int ) : Type[CharacterTrait]
   change_trait_position ( trait_id: int, position: int ) : Type[CharacterTrait]
   delete_trait ( trait_id: int ) : bool
   get_trait_by_id ( trait_id: int ) : Type[CharacterTrait] | None
   get_traits_by_character_id ( character_id: int ) : list
   get_traits_page_by_character_id ( character_id: int, page: int, per_page: int ) : list
   append_events_to_character ( character_id: int, event_ids: list ) : Type[Character]
   get_events_by_character_id ( character_id: int ) : list
   get_events_page_by_character_id ( character_id: int, page: int, per_page: int ) : list
   append_links_to_character ( character_id: int, linkvs: list ) : Type[Character]
   get_links_by_character_id ( character_id: int) : list
   get_links_page_by_character_id ( character_id: int, page: int, per_page: int ) : list
   append_notes_to_character ( character_id: int, note_ids: list ) : Type[Character]
   get_notes_by_character_id ( character_id: int ) : list
   get_notes_page_by_character_id ( character_id: int, page: int, per_page: int ) : list
   append_images_to_character ( character_id: int, image_ids: list ) : Type[Character]
   change_image_position ( image_id: int, position: int ) : Type[CharacterImage]
   change_image_default_status ( image_id: int, is_default: bool ) : Type[CharacterImage]
   delete_image ( image_id: int ) : bool
   get_image_count_by_character_id ( character_id: int ) : int
   get_images_by_character_id ( character_id: int ) : list
   get_images_page_by_character_id ( character_id: int, page: int, per_page: int ) : list

class EventController
   create_event ( title: str, description: str = None, start_datetime: str = None, end_datetime: str = None ) : Type[Event]    
   update_event ( event_id: int, title: str, description: str = None, start_datetime: str = None, end_datetime: str = None ) : Type[Event]    
   delete_event ( event_id: int ) : bool
   get_all_events ( ) : list
   get_all_events_page ( page: int, per_page: int ) : list
   append_characters_to_event ( event_id: int, characters: list ) : Type[Event]
   get_characters_by_event_id ( event_id: int ) : list
   get_characters_page_by_event_id ( event_id: int, page: int, per_page: int ) : list
   append_locations_to_event ( event_id: int, location_ids: list ) : Type[Event]
   get_locations_by_event_id ( event_id: int ) : list
   append_links_to_event ( event_id: int, link_ids: list ) : Type[Event]
   get_links_by_event_id ( event_id: int ) : list
   get_links_page_by_event_id ( event_id: int, page: int, per_page: int ) : list
   append_notes_to_event ( event_id: int, note_ids: list ) : Type[Event]
   get_notes_by_event_id ( event_id: int ) : list
   get_notes_page_by_event_id ( event_id: int, page: int, per_page: int ) : list

class ImageController
   create_image ( filename: str, dirname: str, size_in_bytes: int, mime_type: str, caption: str = None ) : Image
   update_image ( image_id: int, caption: str = None ) : Image
   delete_image ( image_id: int ) : bool
   get_all_images ( ) : list
   get_all_images_page ( page: int, per_page: int ) : list
   search_images ( search: str ) : list
   get_images_by_character_id ( character_id: int ) : list
   get_images_page_by_character_id ( character_id: int, page: int, per_page: int ) : list
   get_images_by_location_id ( location_id: int ) : list
   get_images_page_by_location_id ( location_id: int, page: int, per_page: int ) : list

class LinkController
   create_link ( url: str, title: str ) : Link
   update_link ( link_id, url: str, title: str ) : Type[Link]
   delete_link ( link_id: int ) : bool
   get_link_by_id ( link_id: int ) : Type[Link] | None
   get_links_by_story_id (story_id: int ) : list
   get_all_links ( ) : list
   get_all_links_page ( page: int, per_page: int ) : list
   search_links ( search: str ) : list

class LocationController
   create_location ( title: str, description: str = None, address: str = None, city: str = None, state: str = None, country: str = None, zip_code: str = None, latitude: float = None, longitude: float = None ) : Type[Location]
   update_location ( location_id: int, title: str, description: str = None, address: str = None, city: str = None, state: str = None, country: str = None, zip_code: str = None, latitude: float = None, longitude: float = None ) : Type[Location]
   delete_location ( location_id: int ) : bool
   get_all_locations ( ) : list
   get_all_locations_page ( page: int. per_page: int ) : list
   search_locations_by_title_and_description ( search: str ) : list
   search_locations_by_address ( search: str ) : list
   search_locations_by_city ( search: str ) : list
   search_locations_by_state ( search: str ) : list
   search_locations_by_country ( search: str ) : list
   search_locations_by_zip_code ( search: str ) : list
   append_images_to_location ( location_id: int, image_ids: list ) : Type[Location]
   get_images_by_location_id ( location_id: int ) : list
   get_images_page_by_location_id ( location_id: int, page: int, per_page: int ) : list
   append_links_to_location ( location_id: int, link_ids: list ) : Type[Location]
   get_links_by_location_id ( location_id: int ) : list
   get_links_page_by_location_id ( location_id: int, page: int, per_page: int ) : list
   append_notes_to_location ( location_id: int, note_ids: list ) : Type[Location]
   get_notes_by_location_id ( location_id: int ) : list
   get_notes_page_by_location_id ( location_id: int, page: int, per_page: int ) : list

class NoteController
   create_note ( title: str, content: str ) : Note
   update_note ( note_id: int, title: str, content: str ) : Type[Note]
   delete_note ( note_id: int ) bool
   get_note_by_id ( note_id: int ) Type[Note] | None
   get_all_notes ( ) : list
   get_all_notes_page ( page: int, per_page: int ) : list
   search_notes ( search: str ) : list

class SceneController
   create_scene ( story_id: int, chapter_id: int, title: str, description: str = None, content: str = None ) : Type[Scene]
   update_scene ( scene_id: int, title: str, description: str = None, content: str = None ) : Type[Scene]
   change_scene_position ( scene_id: int, position: int ) : Type[Scene]
   delete_scene ( scene_id: int ) : bool
   get_all_scenes ( ) : list
   get_all_scenes_page ( page: int, per_page: int ) : list
   get_scenes_by_story_id ( story_id: int ) : list
   get_scenes_page_by_story_id ( story_id: int, page: int, per_page: int ) : list
   get_scenes_by_chapter_id ( chapter_id: int ) : list
   get_scenes_page_by_chapter_id ( chapter_id: int, page: int, per_page: int ) : list
   search_scenes ( search: str ) : list
   append_links_to_scene ( scene_id: int, link_ids: list ) : Type[Scene]
   get_links_by_scene_id ( scene_id: int ) : list
   append_notes_to_scene ( scene_id: int, note_ids: list ) : Type[Scene]
   get_notes_by_scene_id ( scene_id: int ) : list

class StoryController
   create_story ( title: str, description: str = None ) : Story
   update_story ( story_id: int, title: str, description: str = None ) : Type[Story]
   delete_story ( story_id: int ) : bool
   get_story_by_id ( story_id: int ) : Type[Story] | None
   get_all_stories ( ) : list
   get_all_stories_page ( page: int, per_page: int ) : list
   search_stories ( search: str ) : list
   append_authors_to_story ( story_id: int, author_ids: list ) : Type[Story]
   get_authors_by_story_id ( story_id: int ) : list
   append_links_to_story ( story_id: int, link_ids: list ) : Type[Story]
   get_links_by_story_id ( story_id: int ) : list
   append_notes_to_story ( story_id: int, mote_ids: list ) : Type[Story]
   get_notes_by_story_id ( story_id: int ) : list

class SubmissionController
   create_submission
   update_submission
   delete_submission
   get_all_submissions
   get_all_submissions_page
   get_submissions_by_story_id
   get_submissions_page_by_story_id

class UserController
   create_user
   register_user
   activate_user
   deactivate_user
   login
   change_password
   delete_user
   get_user_by_id
   get_user_by_uuid
   get_user_by_username
   get_user_by_email
   get_user_count
   get_all_users
   get_users_page
   search_users

